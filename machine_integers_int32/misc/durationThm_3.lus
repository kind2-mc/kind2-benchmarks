--
-- Source: Bertrand Jeannet
--

node Sofar( X : bool ) returns ( Sofar : bool );
let
    Sofar = X -> X and pre Sofar;
tel


node Age (p: bool) returns (age_of_p: int32);
-- how long has p been maintained true in the strict past
let
 age_of_p = (int32 0) -> if pre(p) then pre(age_of_p) + (int32 1) else (int32 0);
tel

-- Theorem (int32 5):
-- ((p -k-> q and ([[q]] => length <= m))  => ([[p]] => length <= k+m)

-- Not provable in luke-*
node top (k0, m0: int32; p, q : bool) returns (OK: bool);
var k,m: int32;
    env : bool;
let
    k = k0-> pre(k);
    m = m0-> pre(m);
    env = Sofar( (k>=(int32 1) and m>=(int32 1)) and (Age(p)>=k => q) and (Age(q)<= m) );
    OK = env => (Age(p) <= k+m);
    --%PROPERTY OK;
    --%MAIN;
tel
