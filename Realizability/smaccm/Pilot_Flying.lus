node Agree_Nodes__Duration (
  p : bool
) returns (
  c : int
);
let
  c = if (p) then ((1) -> ((pre (c)) + (1))) else (0);
tel

node Agree_Nodes__Rise (
  p : bool
) returns (
  r : bool
);
let
  r = (false) -> ((not (pre (p))) and (p));
tel

node Pilot_Flying__Pilot_Flying__PRESSED (
  p : bool
) returns (
  r : bool
);
let
  r = Agree_Nodes__Rise(p);
tel

node Agree_Nodes__Changed (
  p : bool
) returns (
  r : bool
);
let
  r = (false) -> ((p) <> (pre (p)));
tel

node Pilot_Flying__Pilot_Flying__CHANGED (
  p : bool
) returns (
  r : bool
);
let
  r = Agree_Nodes__Changed(p);
tel

node imported main (
  TS : bool
) returns (
  LPFS : bool;
  RPFS : bool
);
(*@contract
  var __GUARANTEE0 : bool = (LPFS) or (RPFS);
  var __GUARANTEE1 : bool = ((Agree_Nodes__Duration(not (Pilot_Flying__Pilot_Flying__PRESSED(TS)))) > (25)) => ((LPFS) = (not (RPFS)));
  var __GUARANTEE2 : bool = ((LPFS) -> (true)) and ((not (RPFS)) -> (true));
  var __GUARANTEE3 : bool = ((Agree_Nodes__Duration(not (Pilot_Flying__Pilot_Flying__PRESSED(TS)))) > (26)) => (not ((Pilot_Flying__Pilot_Flying__CHANGED(RPFS)) or (Pilot_Flying__Pilot_Flying__CHANGED(LPFS))));
  guarantee __GUARANTEE0;
  guarantee __GUARANTEE1;
  guarantee __GUARANTEE2;
  guarantee __GUARANTEE3;
*)


