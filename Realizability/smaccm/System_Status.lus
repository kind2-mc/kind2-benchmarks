type DATATYPES__Config_Outputs__Impl = struct {Config_Mode : int; Config_Timer : int; Configured : int; Drug_Concentration : int; Drug_Name : int; Duration_Intermittent_Bolus : int; Duration_Patient_Bolus : int; Entered_Reservoir_Volume : int; Error_Message_ID : int; Flow_Rate_Basal : int; Flow_Rate_Intermittent_Bolus : int; Flow_Rate_KVO : int; Flow_Rate_Patient_Bolus : int; Infusion_Total_Duration : int; Interval_Intermittent_Bolus : int; Lockout_Period_Patient_Bolus : int; Log_Message_ID : int; Max_Number_of_Patient_Bolus : int; Patient_ID : int; Request_Config_Type : bool; Request_Confirm_Infusion_Initiate : bool; Request_Infusion_Info : bool; Request_Patient_Drug_Info : bool; Reservoir_Volume : int; VTBI_Total : int};
type DATATYPES__Infusion_Manager_Outputs__Impl = struct {Actual_Infusion_Duration : int; Commanded_Flow_Rate : int; Current_System_Mode : int; Log_Message_ID : int; New_Infusion : bool};
type DATATYPES__Top_Level_Mode_Outputs__Impl = struct {Log_Message_ID : int; Request_Confirm_Stop : bool; System_On : bool};
type DATATYPES__System_Status_Outputs__Impl = struct {In_Therapy : bool; Log_Message_ID : int; Reservoir_Empty : bool; Reservoir_Volume : int; Volume_Infused : int};
type DATATYPES__Device_Sensor_Inputs__Impl = struct {Air_In_Line : bool; Air_Pressure : bool; Battery_Depleted : bool; Battery_Low : bool; Battery_Unable_To_Charge : bool; CPU_Error : bool; Door_Open : bool; Flow_Rate : int; Flow_Rate_Not_Stable : bool; Humidity : bool; Log : bool; Memory_Corrupted : bool; Occlusion : bool; Post_Successful : bool; Pump_Overheated : bool; Pump_Primed : bool; Pump_Too_Hot : bool; RTC_Error : bool; Supply_Voltage : bool; Temp : bool; WatchDog_Interrupt_Detected : bool};
type DATATYPES__Device_Configuration_Inputs__Impl = struct {Audio_Enable_Duration : int; Audio_Level : int; Config_Warning_Duration : int; Empty_Reservoir : int; Log_Interval : int; Low_Reservoir : int; Max_Config_Duration : int; Max_Confirm_Stop_Duration : int; Max_Display_Duration : int; Max_Duration_Over_Infusion : int; Max_Duration_Under_Infusion : int; Max_Idle_Duration : int; Max_Paused_Duration : int; System_Test_Inteval : int; Tolerance_Max : int; Tolerance_Min : int};

node imported main (
  IM_IN : DATATYPES__Infusion_Manager_Outputs__Impl;
  TLM_MODE_IN : DATATYPES__Top_Level_Mode_Outputs__Impl;
  SENSOR_IN : DATATYPES__Device_Sensor_Inputs__Impl;
  CONST_IN : DATATYPES__Device_Configuration_Inputs__Impl;
  CONFIG_IN : DATATYPES__Config_Outputs__Impl
) returns (
  SYS_STAT_OUT : DATATYPES__System_Status_Outputs__Impl
);
(*@contract
  var __GUARANTEE0 : bool = empty_reservoir_condition;
  var __GUARANTEE1 : bool = mode_grt_1_implies_In_Therapy;
  var __GUARANTEE2 : bool = mode_not_grt_1_implies_not_In_Therapy;
  var empty_reservoir_condition : bool = (((TLM_MODE_IN).System_On) and (((SYS_STAT_OUT).Reservoir_Volume) < ((CONST_IN).Empty_Reservoir))) => ((SYS_STAT_OUT).Reservoir_Empty);
  var mode_grt_1_implies_In_Therapy : bool = (((TLM_MODE_IN).System_On) and (((IM_IN).Current_System_Mode) > (1))) => ((SYS_STAT_OUT).In_Therapy);
  var mode_not_grt_1_implies_not_In_Therapy : bool = (((TLM_MODE_IN).System_On) and (not (((IM_IN).Current_System_Mode) > (1)))) => (not ((SYS_STAT_OUT).In_Therapy));
  guarantee __GUARANTEE0;
  guarantee __GUARANTEE1;
  guarantee __GUARANTEE2;
*)


