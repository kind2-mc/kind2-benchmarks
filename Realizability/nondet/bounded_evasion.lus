node Initially (
  exp : bool
) returns (
  iexp : bool
);
let
  iexp = (exp) -> (true);
tel

node imported bounded_evasion (
  adv_x : real;
  adv_y : real
) returns (
  rbt_x : real;
  rbt_y : real
);
(*@contract
  var ok1 : bool = ((rbt_y) = (0.5)) -> (((rbt_y) >= ((pre (rbt_y)) - (0.1))) and ((rbt_y) <= ((pre (rbt_y)) + (0.1))));
  var ok2 : bool = ((rbt_x) >= (0.0)) and ((rbt_x) <= (1.0));
  var ok3 : bool = ((rbt_y) >= (0.0)) and ((rbt_y) <= (1.0));
  var ok4 : bool = ((rbt_x) = (0.5)) -> (((rbt_x) >= ((pre (rbt_x)) - (0.1))) and ((rbt_x) <= ((pre (rbt_x)) + (0.1))));
  var ok5 : bool = (not ((rbt_x) = (adv_x))) and (not ((rbt_y) = (adv_y)));
  var ok6 : bool = (true) -> ((not ((rbt_x) = (pre (rbt_x)))) and (not ((rbt_y) = (pre (rbt_y)))));
  assume Initially(((adv_x) = (0.8)) and ((adv_y) = (0.8)));
  assume ((((adv_x) >= (0.0)) and ((adv_x) <= (1.0))) and ((adv_y) >= (0.0))) and ((adv_y) <= (1.0));
  guarantee ok1;
  guarantee ok2;
  guarantee ok3;
  guarantee ok4;
  guarantee ok5;
  guarantee ok6;
*)


