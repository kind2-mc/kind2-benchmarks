(set-info :origin "NTS benchmark converted to SMT-LIB2 using Eldarica (http://lara.epfl.ch/w/eldarica)")
(set-logic HORN)
(declare-fun p (Int Int Int Int Int Int Int) Bool)
(assert(forall((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int))(=>(and (and (= A 3) (and (and (and (and (and (= H B) (= I C)) (= J D)) (= H E)) (= I F)) (= K G))) (and (and (and (not (not (= (* (- 1) K) (- 2)))) (not (not (= (* (- 1) J) (- 2))))) (not (not (>= (+ I 0) 0)))) (not (not (= (* (- 1) (- (* 2 H) L)) 0))))) (p A B C D E F G))))
(assert(forall((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int)(M Int)(N Int)(O Int)(P Int)(Q Int)(R Int)(S Int)(T Int)(U Int)(V Int)(W Int))(=>(and (or (and (and (and (and (= A 1) (= H 2)) (and (and (and (and (and (= I B) (= J C)) (= K D)) (= L E)) (= L F)) (= M G))) (and (and (and (and (and (= I N) (= J O)) (= K P)) (= Q R)) (= L S)) (= M T))) (not (not (>= (+ (+ (- M L) (- 1)) 0) 0)))) (and (and (and (and (= A 2) (= H 3)) (and (and (and (and (and (= I B) (= J C)) (= K D)) (= I E)) (= L F)) (= K G))) (and (and (and (and (and (= M N) (= Q O)) (= U P)) (= V R)) (= W S)) (= K T))) (and (and (not (not (>= (+ (- W K) 0) 0))) (not (not (= (- W K) L)))) (not (not (= (- W K) J)))))) (p H N O P R S T)) (p A B C D E F G))))
(assert(not (exists((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int)(M Int))(and (and (and (= A 1) (and (and (and (and (and (= B C) (= D E)) (= F G)) (= H I)) (= J K)) (= L M))) (and (and (and (not (not (= (* (- 1) H) (- 1)))) (not (not (= (* (- 1) F) (- 2))))) (not (not (>= (+ D 0) 0)))) (not (not (= (* (- 1) (- (* 2 B) J)) 0))))) (p A C E G I K M)))))
(check-sat)
