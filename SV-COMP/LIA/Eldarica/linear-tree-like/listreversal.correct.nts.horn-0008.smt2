(set-info :origin "NTS benchmark converted to SMT-LIB2 using Eldarica (http://lara.epfl.ch/w/eldarica)")
(set-logic HORN)
(declare-fun p (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert(forall((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int)(M Int)(N Int)(O Int)(P Int)(Q Int)(R Int)(S Int)(T Int)(U Int)(V Int)(W Int)(X Int))(=>(and (and (= A 4) (and (and (and (and (and (and (and (and (and (and (and (and (and (= P B) (= Q C)) (= R D)) (= S E)) (= T F)) (= U G)) (= V H)) (= W I)) (= Q J)) (= R K)) (= S L)) (= T M)) (= U N)) (= X O))) (and (and (not (not (= (* (- 1) X) (- 1)))) (not (not (= (+ (+ U T) 1) W)))) (not (not (= (* (- 1) V) (- 1)))))) (p A B C D E F G H I J K L M N O))))
(assert(forall((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int)(M Int)(N Int)(O Int)(P Int)(Q Int)(R Int)(S Int)(T Int)(U Int)(V Int)(W Int)(X Int)(Y Int)(Z Int)(A1 Int)(B1 Int)(C1 Int)(D1 Int)(E1 Int)(F1 Int)(G1 Int)(H1 Int)(I1 Int)(J1 Int)(K1 Int)(L1 Int)(M1 Int)(N1 Int)(O1 Int)(P1 Int)(Q1 Int)(R1 Int)(S1 Int)(T1 Int)(U1 Int))(=>(and (or (or (and (and (and (and (= A 1) (= P 2)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q B) (= R C)) (= S D)) (= T E)) (= U F)) (= V G)) (= W H)) (= X I)) (= Y J)) (= Z K)) (= A1 L)) (= B1 M)) (= C1 N)) (= D1 O))) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q E1) (= R F1)) (= S G1)) (= T H1)) (= U I1)) (= V J1)) (= W K1)) (= X L1)) (= M1 N1)) (= Z O1)) (= P1 Q1)) (= B1 R1)) (= C1 S1)) (= D1 T1))) (and (and (not (not (= (* (- 1) M1) (- 1)))) (not (not (= (+ P1 1) A1)))) (not (not (= (+ P1 1) Y))))) (and (and (and (and (= A 2) (= P 3)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q B) (= R C)) (= S D)) (= T E)) (= U F)) (= V G)) (= W H)) (= X I)) (= Y J)) (= Z K)) (= A1 L)) (= B1 M)) (= C1 N)) (= D1 O))) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q E1) (= R F1)) (= S G1)) (= T H1)) (= U I1)) (= V J1)) (= W K1)) (= X L1)) (= P1 N1)) (= Z O1)) (= M1 Q1)) (= B1 R1)) (= C1 S1)) (= D1 T1))) (and (and (not (not (>= (+ (+ M1 (- 2)) 0) 0))) (not (not (= (* (- 1) A1) (- 1))))) (not (not (= (+ M1 (- 1)) Y)))))) (and (and (and (and (= A 3) (= P 4)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q B) (= R C)) (= S D)) (= T E)) (= U F)) (= V G)) (= W H)) (= X I)) (= Y J)) (= Z K)) (= A1 L)) (= B1 M)) (= C1 N)) (= D1 O))) (and (and (and (and (and (and (and (and (and (and (and (and (and (= Q E1) (= R F1)) (= S G1)) (= T H1)) (= U I1)) (= V J1)) (= W K1)) (= X L1)) (= Y N1)) (= Z O1)) (= M1 Q1)) (= U1 R1)) (= P1 S1)) (= D1 T1))) (and (and (and (and (not (not (>= (+ (+ U1 (- 2)) 0) 0))) (not (not (= (+ D1 1) C1)))) (not (not (= (* (- 1) B1) (- 1))))) (not (not (= (+ U1 (- 1)) A1)))) (not (not (= (* (- 1) P1) (- 1))))))) (p P E1 F1 G1 H1 I1 J1 K1 L1 N1 O1 Q1 R1 S1 T1)) (p A B C D E F G H I J K L M N O))))
(assert(not (exists((A Int)(B Int)(C Int)(D Int)(E Int)(F Int)(G Int)(H Int)(I Int)(J Int)(K Int)(L Int)(M Int)(N Int)(O Int)(P Int)(Q Int)(R Int)(S Int)(T Int)(U Int)(V Int)(W Int)(X Int)(Y Int)(Z Int)(A1 Int)(B1 Int)(C1 Int))(and (and (and (= A 1) (and (and (and (and (and (and (and (and (and (and (and (and (and (= B C) (= D E)) (= F G)) (= H I)) (= J K)) (= L M)) (= N O)) (= P Q)) (= R S)) (= T U)) (= V W)) (= X Y)) (= Z A1)) (= B1 C1))) (not (not (>= (+ (+ (+ (- (- (* (- 1) Z) X) V) P) (- 1)) 0) 0)))) (p A C E G I K M O Q S U W Y A1 C1)))))
(check-sat)
