--
-- Source: Bertrand Jeannet
--

node Sofar( X : bool ) returns ( Sofar : bool );
let
    Sofar = X -> X and pre Sofar;
tel


node Age (p: bool) returns (age_of_p: int32);
-- how long has p been maintained true in the strict past
let
 age_of_p = (int32 0) -> if pre(p) then pre(age_of_p) + (int32 1) else (int32 0);
tel

-- Theorem (int32 3):
-- (p -k-> q and r -k-> t) => (p and r) -k-> (q and t)

-- Not provable in luke-*
node top (k0: int32; p, q, r, t : bool) returns (OK: bool);
var k: int32;
    env : bool;
let
    k = k0-> pre(k);
    env = Sofar((k>=(int32 1)) and (Age(p)>=k => q)  and (Age(r)>=k => t));
    OK = env => ((Age(p and r)>=k) => (q and t));
    --%PROPERTY OK;
    --%MAIN;
tel
