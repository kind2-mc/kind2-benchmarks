-- a simple (int32 0) to (int32 5) boolean counter (A is LSB, C is MSB)
-- property is that it should never reach (int32 6) or (int32 7)

node bool6 (x:bool) returns (out:bool);
var a,b,c: bool;
let
  a = false -> not pre(a);
  b = false -> (not pre(c) and not pre(b) and pre(a)) or
           (pre(b) and not pre(a));
  c = false -> (pre(c) and not pre(a)) or (pre(b) and pre(a));
  out = a and c;
tel

-- this resets to (int32 1), not (int32 0)
node int6I (x:bool) returns (out:bool);
var time:int32;
let
  time = (int32 0) -> if pre time = (int32 5) then (int32 1)
              else pre time + (int32 1);
  out = time = (int32 5);
tel



node top (x:bool) returns (OK:bool);
var a,b:bool;
let
  OK = a=b;
  a = int6I(x);
  b = bool6(x);
  --%PROPERTY OK;
tel
